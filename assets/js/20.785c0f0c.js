(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{446:function(t,a,s){"use strict";s.r(a);var e=s(9),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[t._v("#")]),t._v(" CLI")]),t._v(" "),s("p",[t._v("An Epirus binary is distributed, providing an interactive command line (CLI). It allows you to use some of Epirus' key functionality from your terminal, including:")]),t._v(" "),s("ul",[s("li",[t._v("New project creation")]),t._v(" "),s("li",[t._v("Project creation from existing Solidity code")]),t._v(" "),s("li",[t._v("Wallet creation")]),t._v(" "),s("li",[t._v("Wallet password management")]),t._v(" "),s("li",[t._v("Ether transfer from one wallet to another")]),t._v(" "),s("li",[t._v("Generation of Solidity smart contract wrappers")]),t._v(" "),s("li",[t._v("Generation of unit tests for Java smart contract wrappers")]),t._v(" "),s("li",[t._v("Smart contract auditing")]),t._v(" "),s("li",[t._v("Account creation & management")]),t._v(" "),s("li",[t._v("Wallet funding")])]),t._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("h3",{attrs:{id:"script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script"}},[t._v("#")]),t._v(" Script")]),t._v(" "),s("p",[t._v("The simplest way to install the Epirus CLI is via the following script:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L get.epirus.io "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.epirus/source.sh\n")])])]),s("p",[t._v("You can verify the installation was successful by running "),s("code",[t._v("epirus version")]),t._v(", which should output as follows:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("\n  ______       _                \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__   _ __  _ _ __ _   _ ___ \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ \\| | '")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("______"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" .__/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__,_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("___/\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \nVersion: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.9")]),t._v(".1\nBuild timestamp: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-03-31 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":39:28.526 UTC\n")])])]),s("h2",{attrs:{id:"epirus-new-import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#epirus-new-import"}},[t._v("#")]),t._v(" Epirus new & import")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("epirus new")]),t._v(" and "),s("code",[t._v("epirus import")]),t._v(" commands provide a convenient way to create a new Kotlin/Java project using Epirus's Command Line Tools.")]),t._v(" "),s("p",[t._v("These commands provide the following functionality:")]),t._v(" "),s("ul",[s("li",[t._v("Creation of a new Java/Kotlin project.")]),t._v(" "),s("li",[t._v("Generation of a simple "),s("em",[t._v("Hello World")]),t._v(" Solidity contract (named the "),s("code",[t._v("HelloWorld")]),t._v(") or import an existing Solidity project from a file or directory.")]),t._v(" "),s("li",[t._v("Compilation of the Solidity files.")]),t._v(" "),s("li",[t._v("Configure the project to use the Gradle build tool.")]),t._v(" "),s("li",[t._v("Generate Java smart contract wrappers for all provided Solidity files.")]),t._v(" "),s("li",[t._v("Add the required Epirus dependencies, to deploy and interact with the contracts.")]),t._v(" "),s("li",[t._v("Generate unit tests for the Java smart contract wrappers.")]),t._v(" "),s("li",[t._v("Generate a password protected wallet with each project.")])]),t._v(" "),s("h3",{attrs:{id:"epirus-new-epirus-new-java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#epirus-new-epirus-new-java"}},[t._v("#")]),t._v(" epirus new / epirus new --java")]),t._v(" "),s("p",[t._v("To generate a new project interactively:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus new \n")])])]),s("p",[t._v("You will be prompted to answer a series of questions to create your project:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  ______       _                \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__   _ __  _ _ __ _   _ ___ \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ \\| | '")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("______"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" .__/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__,_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("___/\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \nPlease enter the project name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Web3App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\n\nPlease enter the package name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" your project "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("io.epirus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\n\nPlease enter the destination of your project "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("/home/user/project"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": \n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating Web3App\nProject Created Successfully\n\nProject information\nWallet Address      0xf042183586d45c3580905ce93c956e4eb1303a1e\n\nCommands\n./gradlew run       Runs your application\n./gradlew "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("      Test your application\nepirus deploy       Deploys your application\n$\n")])])]),s("p",[t._v("Details of the created project structure are "),s("a",{attrs:{href:"#generated-project-structure"}},[t._v("below")]),t._v(".")]),t._v(" "),s("p",[t._v("Or using non-interactive mode:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus new -n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("project name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("package name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("-o")]),t._v(" option can be omitted if you want to generate the project in the current directory.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("project name")]),t._v(" and "),s("code",[t._v("package name")]),t._v(" values must comply with the Java standard. The project name is also used as the class name.")]),t._v(" "),s("h3",{attrs:{id:"epirus-import-epirus-import-java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#epirus-import-epirus-import-java"}},[t._v("#")]),t._v(" Epirus import / Epirus import --java")]),t._v(" "),s("p",[t._v("Similarly to "),s("code",[t._v("epirus new")]),t._v(", "),s("code",[t._v("epirus import")]),t._v(" will create a new  project but with user defined smart contracts. By default a Kotlin project will be generated if the "),s("code",[t._v("--java")]),t._v(" option is not appended.")]),t._v(" "),s("p",[t._v("Again, to generate a new project interactively:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v("\n")])])]),s("p",[t._v("You will be prompted to answer a series of questions to create your project:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  ______       _                \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__   _ __  _ _ __ _   _ ___ \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ \\| | '")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("______"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" .__/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__,_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("___/\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  \nPlease enter the project name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Web3App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\nMyImportedProject\nPlease enter the package name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" your project "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("io.epirus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\ncom.web3labs.eth\nPlease enter the path to your solidity file/folder "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Required Field"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": \n/path/to/solidity\nPlease enter the destination of your project "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("/home/user/Documents/myfolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": \n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nWould you like to generate unit "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" your solidity contracts "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Y/n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ? \nn\nProject created with name: myimportedproject at location: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n$\n")])])]),s("p",[t._v("This command can also be used non-interactively")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("project name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("package name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path to solidity sources"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -t\n")])])]),s("p",[t._v("or")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" \n")])])]),s("p",[t._v("The "),s("code",[t._v("-s")]),t._v(" option will work with a single solidity file or a folder containing solidity files.\nThe "),s("code",[t._v("-t")]),t._v(" option is false by default. By passing "),s("code",[t._v("-t")]),t._v(" unit tests will be generated for the java wrappers.")]),t._v(" "),s("h3",{attrs:{id:"epirus-generate-tests-epirus-generate-tests-java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#epirus-generate-tests-epirus-generate-tests-java"}},[t._v("#")]),t._v(" Epirus generate-tests / Epirus generate-tests --java")]),t._v(" "),s("p",[t._v("When creating a new project or importing solidity contracts, by using:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus generate-tests\n")])])]),s("p",[t._v("You will be prompted to answer a series of questions to generate your tests:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  ______       _                \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__   _ __  _ _ __ _   _ ___ \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ \\| | '")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("______"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" .__/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__,_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("___/\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \nPlease enter the path of the generated contract wrappers.\n/home/user/Documents/dev/java/\nWhere would you like to save your tests.\n/home/user/Documents/dev/unit-tests/\nUnit tests were generated successfully at location: /home/user/Documents/dev/unit-tests/\n")])])]),s("p",[t._v("The command can also be used non-interactively")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus generate-tests -i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Solidity java wrappers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("output path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("When adding the path to your Java wrappers make sure you specify the path up to the package root e.g:\nIf a class with name HelloWorld and package name "),s("code",[t._v("io.epirus")]),t._v(" is located under "),s("code",[t._v("/home/user/Documents/dev/io/epirus/HelloWorld.java")]),t._v(", the correct way to point to that class is "),s("code",[t._v("/home/user/Documents/dev")])]),t._v(" "),s("h2",{attrs:{id:"generated-project-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generated-project-structure"}},[t._v("#")]),t._v(" Generated project structure")]),t._v(" "),s("p",[t._v("Your application code and tests will be located in the following project directories:")]),t._v(" "),s("p",[t._v("For Kotlin:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("./src/main/kotlin")]),t._v(" - Generated Kotlin application code stub")]),t._v(" "),s("li",[s("code",[t._v("./src/test/kotlin")]),t._v(" - Generated Kotlin test code stub")]),t._v(" "),s("li",[s("code",[t._v("./src/main/solidity")]),t._v(" - Solidity source code")])]),t._v(" "),s("p",[t._v("For Java:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("./src/main/java")]),t._v(" - Generated Java application code stub")]),t._v(" "),s("li",[s("code",[t._v("./src/test/java")]),t._v(" - Generated Java test code stub")]),t._v(" "),s("li",[s("code",[t._v("./src/main/solidity")]),t._v(" - Solidity source code")])]),t._v(" "),s("p",[t._v("If you need to edit the build file, it is located in the project root directory:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("./build.gradle")]),t._v(" - Gradle build configuration file")])]),t._v(" "),s("p",[t._v("Additionally there are the following Gradle artifacts which you can ignore.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/gradle")]),t._v(" - local Gradle installation")]),t._v(" "),s("li",[s("code",[t._v("/.gradle")]),t._v(" - local Gradle cache")]),t._v(" "),s("li",[s("code",[t._v("/build")]),t._v(" - compiled classes including smart contract bindings")])]),t._v(" "),s("p",[t._v("If you need to view any of the generated Solidity or contract artifacts, they are available in the following locations.")]),t._v(" "),s("p",[t._v("Solidity "),s("code",[t._v("bin")]),t._v(" and "),s("code",[t._v("abi")]),t._v(" files are located at:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("./build/resources/main/solidity/")])])]),t._v(" "),s("p",[t._v("The source code for the generated smart contract bindings can be found at:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("./build/generated/source/epirus/main/java/<your-package>/generated/contracts")])])]),t._v(" "),s("p",[t._v("The compiled code for the generated smart contracts bindings is available at the below location. These are the artifacts that you use to deploy, transact and query your smart contracts.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("./build/classes/java/main/<your-package>/generated/contracts/")])])]),t._v(" "),s("h2",{attrs:{id:"build-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-commands"}},[t._v("#")]),t._v(" Build commands")]),t._v(" "),s("p",[t._v("Epirus projects use the Gradle build tool under the covers. Gradle is a build DSL  for JVM projects used widely in Java, Kotlin and Android projects. You shouldn't need to be too concerned with the semantics of Gradle beyond the following build commands:")]),t._v(" "),s("p",[t._v("To build the project run:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("./gradlew build\n")])])]),s("p",[t._v("To update the just the smart contract bindings following changes to the Solidity code run:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("./gradlew generateContractWrappers\n")])])]),s("p",[t._v("To delete all project build artifacts, creating a clean environment, run:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("./gradlew clean\n")])])]),s("h2",{attrs:{id:"wallet-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wallet-tools"}},[t._v("#")]),t._v(" Wallet tools")]),t._v(" "),s("p",[t._v("To generate a new Ethereum wallet:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ epirus wallet create\n")])])]),s("p",[t._v("To update the password for an existing wallet:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ epirus wallet update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("walletfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("To send Ether to another address:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ epirus wallet send "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("walletfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 0x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ensName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("When sending Ether to another address you will be asked a series of questions before the transaction takes place. See the below for a full example")]),t._v(" "),s("p",[t._v("The following example demonstrates using Epirus to send Ether to another wallet.")]),t._v(" "),s("p",[t._v("With the following input:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus wallet send "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("walletfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 0x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ensName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("Epirus proceeds as follows:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  ______       _                \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__   _ __  _ _ __ _   _ ___ \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ \\| | '")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("______"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" .__/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__,_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("___/\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  \nPlease enter your existing wallet "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" password:\nWallet "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" address 0x19e03255f667bdfd50a32722df860b1eeaf4d635 loaded\nPlease confirm address of running Ethereum client you wish to send the transfer request to "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("http://localhost:8545/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\nConnected successfully to client: Geth/v1.4.18-stable-c72f5459/darwin/go1.7.3\nWhat amound would you like to transfer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("please enter a numeric value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.000001")]),t._v("\nPlease specify the unit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ether, wei, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ether"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\nPlease confim that you wish to transfer "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.000001")]),t._v(" ether "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000000000")]),t._v(" wei"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" to address 0x9c98e381edc5fe1ac514935f3cc3edaa764cf004\nPlease "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yes'")]),t._v(" to proceed: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\nCommencing transfer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this may take a few minutes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".$\n\nFunds have been successfully transferred from 0x19e03255f667bdfd50a32722df860b1eeaf4d635 to 0x9c98e381edc5fe1ac514935f3cc3edaa764cf004\nTransaction hash: 0xb00afc5c2bb92a76d03e17bd3a0175b80609e877cb124c02d19000d529390530\nMined block number: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1849039")]),t._v("\n")])])]),s("p",[t._v("To fund a wallet on the Rinkeby or Ropsten testnet using the faucets provided by Web3 Labs, use the following command:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus wallet fund "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("network name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 0x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),s("p",[t._v("For instance, to fund the address "),s("code",[t._v("0xc6c7224128b9714b47009be351d0ea5bcb16da29")]),t._v(", on Rinkeby:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("epirus wallet fund rinkeby 0xc6c7224128b9714b47009be351d0ea5bcb16da29\n")])])]),s("p",[t._v("Please note that this functionality requires a proof-of-work based captcha, and is rate-limited. "),s("a",{attrs:{href:"https://rinkeby.faucet.epirus.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rinkeby"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://ropsten.faucet.epirus.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ropsten"),s("OutboundLink")],1),t._v(" Web3 Labs faucets can also be accessed from your browser.")]),t._v(" "),s("h2",{attrs:{id:"auditing-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auditing-tools"}},[t._v("#")]),t._v(" Auditing Tools")]),t._v(" "),s("p",[t._v("Smart contracts written in Solidity often include logic bugs and other issues which might compromise their security. These are not always obvious to programmers. Issues can include "),s("a",{attrs:{href:"https://github.com/smartdec/classification#arithmetic",target:"_blank",rel:"noopener noreferrer"}},[t._v("integer precision problems"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://github.com/smartdec/classification#contract-interaction",target:"_blank",rel:"noopener noreferrer"}},[t._v("re-entrancy attacks"),s("OutboundLink")],1),t._v(", and many other flaws. As Ethereum smart contracts are immutable once they have been deployed, it is important that they are bug-free at this point. Epirus is able to audit smart contracts for certain common issues and vulnerabilities using static code analysis.")]),t._v(" "),s("p",[t._v("To audit a smart contract (in this instance, Campaign.sol):")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ epirus audit Campaign.sol\n")])])]),s("p",[t._v("An example of the output from this command is as follows:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  ______       _                \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__   _ __  _ _ __ _   _ ___ \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ \\| | '")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("______"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" .__/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__,_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("___/\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  \n./Campaign.sol\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("131")]),t._v(":58   severity:2   Multiplication after division                  SOLIDITY_DIV_MUL_09hhh1                              \n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("91")]),t._v(":8     severity:1   Revert inside the if-operator                  SOLIDITY_REVERT_REQUIRE_c56b12                       \n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":4      severity:1   Use of SafeMath                                SOLIDITY_SAFEMATH_837cac                             \n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("148")]),t._v(":4    severity:1   Replace multiple "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" values with a struct   SOLIDITY_SHOULD_RETURN_STRUCT_83hf3l                 \n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("125")]),t._v(":4    severity:1   Prefer external to public visibility level     SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL_73ufc1   \n\n✖ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" problems "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" errors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("The output is in the form of a list of issues/errors detected by the static analysis tool. The first column of output shows the line and the character at which the issue was encountered. The second column shows the severity; this ranges from 1 to 3, with 3 being the most severe. The next column contains a description of the issue found, and the final column provides a reference to the rule used to find the issue.")]),t._v(" "),s("p",[t._v("This functionality is provided by "),s("a",{attrs:{href:"https://github.com/smartdec/smartcheck",target:"_blank",rel:"noopener noreferrer"}},[t._v("SmartCheck"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"solidity-smart-contract-wrapper-generator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solidity-smart-contract-wrapper-generator"}},[t._v("#")]),t._v(" Solidity smart contract wrapper generator")]),t._v(" "),s("p",[t._v("Please refer to "),s("a",{attrs:{href:"https://docs.web3j.io/smart_contracts/#solidity-smart-contract-wrappers",target:"_blank",rel:"noopener noreferrer"}},[t._v("solidity smart contract wrappers"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"account-creation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#account-creation"}},[t._v("#")]),t._v(" Account Creation")]),t._v(" "),s("p",[t._v("In order to create an Epirus account to make full use of the platform features, the command "),s("code",[t._v("epirus account create")]),t._v(" can be used. After account creation & email confirmation, all free platform features will be enabled. The output from the account creation process should be as follows:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  ______       _                \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__   _ __  _ _ __ _   _ ___ \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ \\| | '")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / __"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("____"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("______"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" .__/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("__,_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("___/\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     \nPlease enter your email address: \nyouremail@yourdomain.com\nAccount created successfully. You can now use Epirus Cloud. Please confirm your e-mail within "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" hours to "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("continue")]),t._v(" using all features without interruption.\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);